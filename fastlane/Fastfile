default_platform(:ios)

# Load up any environemnt variables in the .env file
if File.exist?('.env')
  open('.env', 'r').readlines.each do |l|
    kv = l.split('=')
    ENV[kv[0]] = kv[1].chomp
  end
end

### Build Lanes ###

desc "Create a development build, optionally installing to device"
lane :develop do |options|
  build(
    match: "development",
    export: "development",
    config: "Debug",
    clean: options[:clean]
  )
  install
end

desc "Create a beta build"
lane :beta do |options|
  build(
    config: "Beta",
    match: "adhoc",
    export: "ad-hoc",
    clean: options[:clean]
  )

  # TODO: Publish if option is passed
end

desc "Create a release candidate"
lane :candidate do |options|
  build(
    config: "Release",
    match: "adhoc",
    export: "ad-hoc",
    clean: options[:clean]
  )

  # TODO: Publish if option is passed
end

desc "Create a build for release to app store"
lane :release do |options|
  build(
    config: "Release",
    export: "app-store",
    match: "appstore",
    clean: true
  )
  # TODO: Publish if option is passed
end

### Project Maintenance Lanes ###

desc "Install to a device"
lane :install do
  install_on_device(
    ipa: './build/HoloDex.ipa',
    skip_wifi: true
  )
end

desc "Run all the tests"
lane :tests do
  scan(scheme: "HoloDexUnitTests")
end

desc "Run SwiftLint"
lane :lint do |options|
  swiftlint(
    config_file: "./.swiftlint.yml",
    strict: options[:strict]
  )
end

desc "Changelog from commits since last tag"
lane :changelog do
  # TODO: Implement
end

desc "Bump the version in the plist"
lane :bump do
  # TODO: Implement
end

desc "Sync keys, certificates, and provisioning and creates new ones if required"
lane :certs do
  match(readonly: false, username: ENV["APPLE_USERNAME"])
end

### PRIVATE LANES ###

desc "Builds an ipa"
private_lane :build do |options|
  if is_ci
    ci_build(options)
  else
    local_build(options)
  end
end

private_lane :local_build do |options|
  lint(strict: (options[:config] == "Release"))
  match(type: options[:match], username: ENV["APPLE_USERNAME"])
  gym(
    export_method: options[:export],
    configuration: options[:config],
    clean: options[:clean]
  )
end

private_lane :ci_build do |options|
  is_release = (options[:config] == "Release")

  lint(strict: is_release)
  create_keychain(
    name: "CI",
    password: ENV["MATCH_PASSWORD"],
    default_keychain: true,
    unlock: true,
    timeout: 3600,
    add_to_search_list: true
  )
  match(
    type: (is_release ? "appstore" : "adhoc"),
    keychain_name: "CI",
    keychain_password: ENV["MATCH_PASSWORD"],
    username: ENV["APPLE_USERNAME"],
    readonly: true
  )
  gym(
    export_method: (is_release ? "app-store" : "ad-hoc"),
    configuration: (is_release ? "Release" : "Beta"),
    clean: true
  )
end
